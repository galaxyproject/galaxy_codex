name: Run tests
on: [push, pull_request]

jobs:
  test-tools:
    runs-on: ubuntu-20.04
    environment: fetch-tools
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install requirement
        run: python -m pip install -r requirements.txt
      - name: Tool extraction
        # run: bash bin/extract_all_tools.sh
        run: | 
          python bin/extract_galaxy_tools.py \
            extractools \
            --api $GITHUB_API_KEY \
            --all-tools "results/test_tools.tsv" \
            --all-tools-json "results/test_tools.json" \
            --planemo-repository-list "test.list" \
            --test
        env: 
          GITHUB_API_KEY: ${{ secrets.GH_API_TOKEN }}
      - name: Tool filter
        run: | 
          python bin/extract_galaxy_tools.py \
            filtertools \
            --tools "results/all_tools.json" \
            --ts-filtered-tools "results/microgalaxy/tools_filtered_by_ts_categories.tsv" \
            --filtered-tools "results/microgalaxy/tools.tsv" \
            --categories "data/communities/microgalaxy/categories" \
            --status "data/communities/microgalaxy/tool_status.tsv"
      - name: Create interactive table
        run: | 
          python bin/create_interactive_table.py \
            --table "results/microgalaxy/tools.tsv" \
            --template "data/interactive_table_template.html" \
            --output "results/microgalaxy/index.html"
      - name: Create wordcloud
        run: | 
          python bin/create_wordcloud.py \
            --table  "results/microgalaxy/tools.tsv" \
            --wordcloud_mask "data/usage_stats/wordcloud_mask.png" \
            --output "results/microgalaxy/tools_wordcloud.png" \
            --stats_column "No. of tool users (2022-2023) (usegalaxy.eu)"
  test-tutorials:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install requirement
        run: python -m pip install -r requirements.txt
      - name: Tutorial extraction
        run: | 
          python bin/extract_gtn_tutorials.py \
            extracttutorials \
            --all_tutorials "results/test_tutorials.json" \
            --tools "results/all_tools.json" \
            --api $PLAUSIBLE_API_KEY \
            --test
        env: 
          PLAUSIBLE_API_KEY: ${{ secrets.PLAUSIBLE_API_TOKEN }}
      - name: Tutorial filtering
        run: | 
          python bin/extract_gtn_tutorials.py \
            filtertutorials \
            --all_tutorials "results/test_tutorials.json" \
            --filtered_tutorials "results/microgalaxy/test_tutorials.tsv" \
            --tags "data/communities/microgalaxy/tutorial_tags"